import streamlit as st
import pandas as pd
import requests
import matplotlib.pyplot as plt
import seaborn as sns
def run_page():
    API_URL = "http://127.0.0.1:8000/songs"

    st.title("AnÃ¡lise de Dados das MÃºsicas ðŸŽµðŸ“Š")

    @st.cache_data
    def load_data():
        response = requests.get(API_URL)
        if response.status_code == 200:
            return pd.DataFrame(response.json())
        else:
            st.error("Erro ao carregar dados da API.")
            return pd.DataFrame()
    data = load_data()
    if not data.empty:
        st.subheader("Tabela de Dados")
        st.dataframe(data)
        st.sidebar.title("OpÃ§Ãµes de AnÃ¡lise")
        analysis_type = st.sidebar.selectbox(
            "Escolha a anÃ¡lise:",
            [
                "Popularidade MÃ©dia por GÃªnero",
                "DuraÃ§Ã£o MÃ©dia por Artista",
                "DistribuiÃ§Ã£o de Popularidade",
                "MÃºsicas por GÃªnero"
            ]
        )
        if analysis_type == "Popularidade MÃ©dia por GÃªnero":
            st.subheader("Popularidade MÃ©dia por GÃªnero")
            genre_popularity = (
                data.explode("GÃªneros")
                .groupby("GÃªneros")["Popularidade"]
                .mean()
                .sort_values(ascending=False)
            )
            st.bar_chart(genre_popularity)
            st.write(genre_popularity)
        elif analysis_type == "DuraÃ§Ã£o MÃ©dia por Artista":
            st.subheader("DuraÃ§Ã£o MÃ©dia por Artista")
            def duration_to_seconds(duration):
                try:
                    minutes, seconds = map(int, duration.split(":"))
                    return minutes * 60 + seconds
                except ValueError:
                    return 0
            data["DuraÃ§Ã£o (s)"] = data["DuraÃ§Ã£o"].apply(duration_to_seconds)
            artist_duration = (
                data.groupby("Artista")["DuraÃ§Ã£o (s)"]
                .mean()
                .sort_values(ascending=False)
                .head(10)
            )
            st.bar_chart(artist_duration)
            st.write(artist_duration)
        elif analysis_type == "DistribuiÃ§Ã£o de Popularidade":
            st.subheader("DistribuiÃ§Ã£o de Popularidade")
            fig, ax = plt.subplots()
            sns.histplot(data["Popularidade"], bins=10, kde=True, ax=ax, color="blue")
            ax.set_title("DistribuiÃ§Ã£o de Popularidade")
            ax.set_xlabel("Popularidade")
            ax.set_ylabel("FrequÃªncia")
            st.pyplot(fig)
        elif analysis_type == "MÃºsicas por GÃªnero":
            st.subheader("MÃºsicas por GÃªnero")
            genre_count = data.explode("GÃªneros")["GÃªneros"].value_counts()
            fig, ax = plt.subplots()
            genre_count.plot(kind="bar", ax=ax, color="orange")
            ax.set_title("Quantidade de MÃºsicas por GÃªnero")
            ax.set_xlabel("GÃªnero")
            ax.set_ylabel("Quantidade")
            st.pyplot(fig)
            st.write(genre_count)
    else:
        st.warning("Nenhum dado disponÃ­vel para anÃ¡lise.")
